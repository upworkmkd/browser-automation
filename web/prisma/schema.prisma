// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Workflow {
  id          String   @id @default(cuid())
  name        String
  description String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Workflow definition as JSON
  nodes       Json
  edges       Json
  
  // Relations
  executions  WorkflowExecution[]
  
  @@map("workflows")
}

model WorkflowExecution {
  id          String   @id @default(cuid())
  workflowId  String
  status      ExecutionStatus @default(PENDING)
  startedAt   DateTime @default(now())
  completedAt DateTime?
  error       String?
  
  // Execution results
  results     Json?
  
  // Relations
  workflow    Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)
  logs        ExecutionLog[]
  
  @@map("workflow_executions")
}

model ExecutionLog {
  id          String   @id @default(cuid())
  executionId String
  nodeId      String
  timestamp   DateTime @default(now())
  level       LogLevel @default(INFO)
  message     String
  data        Json?
  
  // Relations
  execution   WorkflowExecution @relation(fields: [executionId], references: [id], onDelete: Cascade)
  
  @@map("execution_logs")
}

model NodeTemplate {
  id          String   @id @default(cuid())
  type        String
  name        String
  description String
  category    String
  icon        String?
  config      Json     // Default configuration schema
  isBuiltIn   Boolean  @default(true)
  createdAt   DateTime @default(now())
  
  @@map("node_templates")
}

enum ExecutionStatus {
  PENDING
  RUNNING
  SUCCESS
  FAILED
  CANCELLED
}

enum LogLevel {
  DEBUG
  INFO
  WARN
  ERROR
}
